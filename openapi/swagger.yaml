definitions: {}
info:
  contact:
    email: cdis@uchicago.edu
  description: A microservice that facilitates manifest creation and retrieval. Code
    is available on [GitHub](https://github.com/uc-cdis/manifestservice).
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://cdis.uchicago.edu/terms/
  title: Manifest Service OpenAPI Specification
  version: '1.0'
paths:
  /:
    get:
      description: We find the appropriate folder ("prefix") in the bucket by asking
        Fence for<br/>info about the user's access token.<br/>
      responses:
        '200':
          description: Success
        '403':
          description: Unauthorized
      summary: Returns a list of filenames corresponding to the user's manifests.
    post:
      responses:
        '200':
          description: Success
        '400':
          description: Bad manifest format
        '403':
          description: Unauthorized
      summary: Add manifest to s3 bucket. See the README for the format of this file.
    put:
      responses:
        '200':
          description: Success
        '400':
          description: Bad manifest format
        '403':
          description: Unauthorized
      summary: Add manifest to s3 bucket. See the README for the format of this file.
  /_status:
    get:
      responses:
        '200':
          description: Healthy
        default:
          description: Unhealthy
      summary: Health check endpoint
      tags:
      - system
  /cohorts:
    get:
      description: PFBs. We find the appropriate folder ("prefix") in the bucket by
        asking Fence for<br/>info about the user's access token.<br/>
      responses:
        '200':
          description: Success
        '403':
          description: Unauthorized
      summary: Returns a list of filenames -- which are GUIDs -- corresponding to
        the user's exported
    post:
      description: 'Will create a new file named with the value of the GUID for the
        PFB in the user''s s3 folder<br/>Post body: { "guid": "5183a350-9d56-4084-8a03-6471cafeb7fe"
        }<br/>'
      summary: Add PFB GUID to s3 bucket.
    put:
      description: 'Will create a new file named with the value of the GUID for the
        PFB in the user''s s3 folder<br/>Post body: { "guid": "5183a350-9d56-4084-8a03-6471cafeb7fe"
        }<br/>'
      summary: Add PFB GUID to s3 bucket.
  /file/{file_name}:
    get:
      description: The argument is the filename of the manifest you want to downloaded,<br/>of
        the form "manifest-timestamp".json. The user folder prefix is encapsulated
        from<br/>the caller -- just provide the basepath.<br/>
      responses:
        '200':
          description: Success
        '400':
          description: Bad request format
        '403':
          description: Unauthorized
      summary: Returns the requested manifest file from the user's folder.
  /metadata:
    get:
      responses:
        '200':
          description: Success
        '403':
          description: Unauthorized
      summary: List all exported metadata objects associated with user
    post:
      responses:
        '200':
          description: Success
          example: '({ "filename": "metadata-2024-06-13T17-14-46.026593.json" }, 200)'
        '400':
          description: Bad GUID format
          example: '({ "error": "<error-message>" }, 400)'
        '403':
          description: Unauthorized
          example: '({ "error": "<error-message>" }, 403)'
      summary: Create an exported metadata object
    put:
      responses:
        '200':
          description: Success
          example: '({ "filename": "metadata-2024-06-13T17-14-46.026593.json" }, 200)'
        '400':
          description: Bad GUID format
          example: '({ "error": "<error-message>" }, 400)'
        '403':
          description: Unauthorized
          example: '({ "error": "<error-message>" }, 403)'
      summary: Create an exported metadata object
  /metadata/{file_name}:
    get:
      responses:
        '200':
          description: Success
        '400':
          description: Bad request format
        '403':
          description: Unauthorized
      summary: List all exported metadata objects associated with user
swagger: '2.0'
